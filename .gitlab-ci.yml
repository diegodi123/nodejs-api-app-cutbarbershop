image: node:14.16.0

stages:
  - test
  - package
  - deploy
cache:
    paths:
      - node_modules/

before_script:
- whoami
- pwd

# test_integration:
#   stage: test
#   before_script:
#     - echo "ok"
#   script:
#     - echo "ok"

# vulnerabilities_check:
#   stage: test
#   script:
#     - echo "ok"

# package_api:
#   stage: package
#   cache:
#     key: api-package
#     policy: push
#     paths:
#       - node_modules/
#   script:
#     - npm install

deploy_to_develop: &deploy
  stage: deploy
  tags:
    - app-cut-barber-shop-do
  cache:
    key: api-package
    policy: pull
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/config
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> ~/.ssh/config
  script:
    - bash ./deploymentScripts/deployDev.sh
  environment:
    name: develop
  only:
   - develop

deploy_to_release: &deploy-release
  <<: *deploy
  script:
    - bash ./deploymentScripts/deployRelease.sh
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    on_stop: turnoff
  only:
    - /^release-.*$/

turnoff:
  <<: *deploy-release
  script:
    - bash ./deploymentScripts/stopRelease.sh
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop

deploy_to_production:
  <<: *deploy
  script:
    - bash ./deploymentScripts/deploy.sh
  environment:
    name: production
  only:
   - master
